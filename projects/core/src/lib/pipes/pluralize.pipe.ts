/** @format */

import { Pipe, type PipeTransform } from "@angular/core";

/**
 * Пайп для склонения слов по числам в русском языке
 *
 * Назначение:
 * - Автоматически выбирает правильную форму слова в зависимости от числа
 * - Реализует правила русской грамматики для склонения
 * - Поддерживает все числа (включая отрицательные)
 *
 * Правила склонения в русском языке:
 * - 1, 21, 31, 41... → первая форма (1 проект, 21 проект)
 * - 2-4, 22-24, 32-34... → вторая форма (2 проекта, 23 проекта)
 * - 0, 5-20, 25-30... → третья форма (5 проектов, 10 проектов)
 *
 * Особые случаи:
 * - Числа 11-19 всегда используют третью форму (11 проектов, 14 проектов)
 * - Отрицательные числа обрабатываются по модулю
 *
 * Применение:
 * - Отображение количества элементов
 * - Динамические сообщения с числами
 * - Локализация интерфейса
 */
@Pipe({
  name: "pluralize",
  standalone: true,
})
export class PluralizePipe implements PipeTransform {
  /**
   * Возвращает правильную форму слова для указанного числа
   * @param value - Число для которого нужно выбрать форму слова
   * @param words - Массив из трех форм слова [единственное, 2-4, множественное]
   * @returns Правильная форма слова
   *
   * Параметр words должен содержать три формы:
   * - words[0] - для чисел заканчивающихся на 1 (кроме 11)
   * - words[1] - для чисел заканчивающихся на 2, 3, 4 (кроме 12-14)
   * - words[2] - для всех остальных чисел
   *
   * Примеры использования в шаблонах:
   *
   * <!-- Простое склонение -->
   * <span>{{ projectCount }} {{ projectCount | pluralize:['проект', 'проекта', 'проектов'] }}</span>
   *
   * Результаты:
   * - 1 проект
   * - 2 проекта
   * - 5 проектов
   * - 21 проект
   * - 22 проекта
   * - 25 проектов
   *
   * <!-- Другие примеры -->
   * <span>{{ userCount }} {{ userCount | pluralize:['пользователь', 'пользователя', 'пользователей'] }}</span>
   * <span>{{ commentCount }} {{ commentCount | pluralize:['комментарий', 'комментария', 'комментариев'] }}</span>
   * <span>{{ fileCount }} {{ fileCount | pluralize:['файл', 'файла', 'файлов'] }}</span>
   *
   * <!-- С отрицательными числами -->
   * <span>{{ -3 | pluralize:['день', 'дня', 'дней'] }} назад</span>
   * <!-- Результат: "дня назад" -->
   *
   * Алгоритм работы:
   * 1. Берем абсолютное значение числа по модулю 100
   * 2. Если число от 11 до 19 → третья форма
   * 3. Берем последнюю цифру числа
   * 4. Если последняя цифра 1 → первая форма
   * 5. Если последняя цифра 2, 3, 4 → вторая форма
   * 6. Во всех остальных случаях → третья форма
   */
  transform(value: number, words: [string, string, string]): string {
    // Работаем с абсолютным значением по модулю 100
    // Это позволяет корректно обрабатывать большие числа и отрицательные
    const calcValue = Math.abs(value) % 100;

    // Получаем последнюю цифру числа
    const num = calcValue % 10;

    // Особый случай: числа от 11 до 19 всегда используют третью форму
    // Это исключение из общего правила русского языка
    if (calcValue > 10 && calcValue < 20) {
      return words[2]; // 11 проектов, 12 проектов, 19 проектов
    }

    // Числа заканчивающиеся на 2, 3, 4 используют вторую форму
    if (num > 1 && num < 5) {
      return words[1]; // 2 проекта, 3 проекта, 4 проекта, 22 проекта
    }

    // Числа заканчивающиеся на 1 используют первую форму
    if (num === 1) {
      return words[0]; // 1 проект, 21 проект, 31 проект
    }

    // Все остальные числа используют третью форму
    // Включает: 0, 5-9, 10, 20, 25-30 и т.д.
    return words[2]; // 0 проектов, 5 проектов, 10 проектов, 20 проектов
  }
}
