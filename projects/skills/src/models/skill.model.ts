/** @format */

/**
 * Основная модель навыка в системе обучения
 *
 * Представляет навык, который пользователь может изучать.
 * Содержит информацию о доступности, прогрессе и метаданных навыка.
 */
export interface Skill {
  /** Уникальный идентификатор навыка */
  id: number;

  /** Название навыка */
  name: string;

  /** Общее количество уровней в навыке */
  quantityOfLevels: number;

  /** Ссылка на изображение/иконку навыка */
  fileLink: string;

  /** Автор/создатель навыка */
  whoCreated: string;

  /** Описание навыка */
  description: string;

  /** Флаг принадлежности навыка к траектории обучения */
  isFromTrajectory: boolean;

  /** Требует ли навык активную подписку для доступа */
  requiresSubscription: boolean;

  /** Завершен ли навык пользователем */
  isDone: boolean;

  /** Доступен ли навык бесплатно */
  freeAccess: boolean;

  /** Просрочен ли навык (опциональное поле) */
  overdue?: boolean;
}

/**
 * Детальная информация о задаче навыка
 *
 * Содержит метаданные конкретной задачи в рамках навыка.
 */
export interface TaskDetail {
  /** Название навыка, к которому относится задача */
  skillName: string;

  /** Описание задачи */
  description: string;

  /** Уровень сложности задачи */
  level: number;

  /** Путь к файлу с дополнительными материалами */
  file: string;
}

/**
 * Модель задачи в рамках навыка
 *
 * Представляет отдельную задачу с информацией о её состоянии.
 */
export interface Task {
  /** Уникальный идентификатор задачи */
  id: number;

  /** Уровень задачи в навыке */
  level: number;

  /** Название задачи */
  name: string;

  /** Статус выполнения задачи (true - выполнена, false - не выполнена) */
  status: boolean;
}

/**
 * Ответ сервера со списком задач и статистикой
 *
 * Содержит задачи навыка и статистику выполнения по неделям.
 */
export interface TasksResponse {
  /** Массив задач навыка */
  tasks: Task[];

  /** Статистика выполнения по неделям */
  statsOfWeeks: {
    /** Выполнено ли вовремя (null если неприменимо) */
    doneOnTime: boolean | null;

    /** Выполнено ли вообще */
    isDone: boolean;

    /** Номер недели */
    week: number;
  }[];

  /** Общий прогресс выполнения навыка в процентах (0-100) */
  progress: number;
}

/**
 * Шаг выполнения задачи
 *
 * Представляет отдельный шаг в рамках задачи с определенным типом взаимодействия.
 */
export interface TaskStep {
  /** Уникальный идентификатор шага */
  id: number;

  /** Выполнен ли шаг */
  isDone: boolean;

  /** Тип шага задачи */
  type:
    | "exclude_question" // Вопрос на исключение
    | "question_single_answer" // Вопрос с одним ответом
    | "question_connect" // Вопрос на соединение
    | "info_slide" // Информационный слайд
    | "question_write"; // Вопрос с письменным ответом

  /** Порядковый номер шага в задаче */
  ordinalNumber: number;
}

/**
 * Ответ сервера с шагами задачи и дополнительной информацией
 *
 * Расширяет TaskDetail дополнительными данными о прогрессе и шагах.
 */
export interface TaskStepsResponse extends TaskDetail {
  /** Общее количество шагов в задаче */
  count: number;

  /** Текущий уровень пользователя в навыке */
  currentLevel: number;

  /** Следующий уровень навыка */
  nextLevel: number;

  /** Название навыка */
  skillName: string;

  /** Ссылка на логотип навыка для отображения баллов */
  skillPointLogo: string;

  /** Ссылка на превью навыка */
  skillPreview: string;

  /** Массив шагов задачи */
  stepData: TaskStep[];
}

/**
 * Результаты выполнения задачи
 *
 * Содержит информацию о результатах прохождения задачи пользователем.
 */
export interface TaskResults {
  /** Количество полученных баллов за выполнение */
  pointsGained: number;

  /** Количество правильно выполненных шагов */
  quantityDoneCorrect: number;

  /** Общее количество шагов в задаче */
  quantityAll: number;

  /** Прогресс выполнения в процентах (0-100) */
  progress: number;

  /** ID следующей задачи (null если это последняя задача) */
  nextTaskId: null | number;

  /** Уровень задачи */
  level: number;

  /** Название навыка */
  skillName: string;
}
